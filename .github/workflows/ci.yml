name: ci

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-build:
    name: 🧪 Build, Lint, Test, Synth
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20.x]
        python: ["3.12"]
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🧩 Enable Corepack & Install PNPM
        run: |
          corepack enable
          corepack prepare pnpm@9.1.2 --activate
          npm install -g pnpm@9.1.2

      - name: 🧰 Setup Node.js and enable PNPM cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧹 Lint
        run: pnpm run lint

      - name: 🧪 Test
        run: pnpm run test

      - name: 🏗️ CDK Synth
        run: pnpm run synth

  cdk-deploy-dev:
    name: 🚀 Deploy CDK to Dev
    needs: test-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🧩 Enable Corepack & Install PNPM
        run: |
          corepack enable
          corepack prepare pnpm@9.1.2 --activate
          npm install -g pnpm@9.1.2

      - name: 🧰 Setup Node.js and enable PNPM cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEV_ROLE }}
          aws-region: us-east-1

      - name: 🚀 CDK Deploy
        run: cd infra/cdk && pnpm exec cdk deploy --require-approval never

# Optional: Uncomment when Expo + Vercel deploy steps are implemented
# expo-eas:
#   name: 🚧 Expo Deploy Stub
#   runs-on: ubuntu-latest
#   steps:
#     - run: echo "EAS not yet wired" && exit 1

# vercel-deploy:
#   name: 🚧 Vercel Deploy Stub
#   runs-on: ubuntu-latest
#   steps:
#     - run: echo "Vercel not yet wired" && exit 1
